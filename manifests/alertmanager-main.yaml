---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alertmanager-main
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
  labels:
    app: alertmanager-main
  name: alertmanager-main
  namespace: monitoring
spec:
  selector:
    app: alertmanager
  ports:
    - name: web
      protocol: TCP
      port: 9093
      targetPort: 9093
---
apiVersion: v1
kind: Secret
metadata:
  name: slack-hook-url
  namespace: monitoring
data:
  slack-hook-url: VDZCRkQwTktFL0I2QVZBTktTTC93VFVrQTNwRUJEUmNrR05MT2x3U0hDR0M=
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        app: alertmanager
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 10.96.0.10
          - 8.8.8.8
        searches:
          - jenkins.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "2"
          - name: edns0
      serviceAccountName: alertmanager-main
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.9.1
          env:
            - name: SLACK_HOOK_URL
              valueFrom:
                secretKeyRef:
                  name: slack-hook-url
                  key: slack-hook-url
          command: ['/bin/sh', '/etc/alertmanager/configure_secret.sh']
          args:
            - '-config.file=/etc/alertmanager/config.yml'
            - '-log.level=debug'
            - '-storage.path=/alertmanager'
          ports:
            - name: web
              containerPort: 9093
          volumeMounts:
            - name: config-volume
              mountPath: /etc/alertmanager
              readOnly: false
      volumes:
        - name: config
          emptyDir: {}
        - name: config-volume
          configMap:
            defaultMode: 0666
            name: alertmanager
      nodeSelector:
        beta.kubernetes.io/os: linux
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: alertmanager
  namespace: monitoring
data:
  config.yml: |-
    global:
      resolve_timeout: 5m
      slack_api_url: 'https://hooks.slack.com/services/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'
    receivers:
    - name: email-me
      email_configs:
      - to: bombascter@gmail.com
        from: bombascter@gmail.com
        smarthost: smtp.gmail.com:587
        auth_username: bombascter@gmail.com
        auth_identity: bombascter@gmail.com
        auth_password: sgqorxbvnoxwupdg
    - name: 'slack'
      slack_configs:
      - channel: '#alerts'
        send_resolved: true
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
          {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
            {{" "}}(
            {{- with .CommonLabels.Remove .GroupLabels.Names }}
              {{- range $index, $label := .SortedPairs -}}
                {{ if $index }}, {{ end }}
                {{- $label.Name }}="{{ $label.Value -}}"
              {{- end }}
            {{- end -}}
            )
          {{- end }}
        text: >-
          {{ with index .Alerts 0 -}}
            :chart_with_upwards_trend: *<{{ .GeneratorURL }}|Graph>*
            {{- if .Annotations.runbook }}   :notebook: *<{{ .Annotations.runbook }}|Runbook>*{{ end }}
          {{ end }}

          *Alert details*:

          {{ range .Alerts -}}
            *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
          *Description:* {{ .Annotations.description }}
          *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
    route:
      group_by:
      - job
      group_interval: 5m
      group_wait: 30s
      receiver: slack
      repeat_interval: 1h
      routes:
      - match:
          alertname: Watchdog
        receiver: email-me
  configure_secret.sh: |-
    echo 'Configuring Slack hook url.'
    sed -i -e s,API_URL_SECRET,"$SLACK_HOOK_URL",g /etc/alertmanager/config.yml
    exec /bin/alertmanager $*
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: alertmanager-main
  name: alertmanager
  namespace: monitoring
spec:
  endpoints:
    - interval: 15s
      port: web
  selector:
    matchLabels:
      app: alertmanager-main
